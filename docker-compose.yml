services:
  # PostgreSQL for IdentityServer
  identityserver-db:
    image: postgres:16
    container_name: identityserver-db
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: identity
    volumes:
      - identity_data:/var/lib/postgresql/data
    ports:
      - ${IDENTITY_SERVER_DB_PORT}:5432
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  # IdentityServer
  identityserver:
    container_name: identityserver
    build:
        context: .
        dockerfile: src/IdentityServer/Dockerfile
    ports:
      - "${IDENTITY_SERVER_HTTP_API_PORT}:8080"     # HTTP API/Swagger
      - "${IDENTITY_SERVER_HTTPS_API_PORT}:8081"    # HTTP API/Swagger
      - "${IDENTITY_SERVER_HTTP_PORT}:5000"         # IdentityServer HTTP (internal port 5000)
      - "${IDENTITY_SERVER_HTTPS_PORT}:5001"        # IdentityServer HTTPS (if configured)
    environment:
      ASPNETCORE_ENVIRONMENT: ${ASPNETCORE_ENVIRONMENT}
      CERT_PASSWORD: ${CERT_PASSWORD}
      ASPNETCORE_URLS: http://+:8080;https://+:8081;http://+:5000;https://+:5001 # interal container ports
      ConnectionStrings__IdentityDb: ${CONNECTION_STRING_IDENTITY_DB}
      EventBus__ConnectionString: ${CONNECTION_STRING_EVENT_BUS}
    volumes:
      - ${APPDATA}/Microsoft/UserSecrets:/root/.microsoft/usersecrets:ro
      - ${APPDATA}/ASP.NET/Https:/root/.aspnet/https:ro
    depends_on:
      identityserver-db:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--spider", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 5

  # RabbitMQ
  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:3-management
    ports:
      - "${RABBIT_MQ_AMQP_PORT}:5672"
      - "${RABBIT_MQ_UI_PORT}:15672"
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_DEFAULT_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_DEFAULT_PASS}
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 30s
      timeout: 10s
      retries: 5

  # PostgreSQL for TaskManager API
  taskmanager-db:
    container_name: taskmanager-db
    image: postgres:16
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: taskmanager
    volumes:
      - taskmanager_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  # TaskManager API
  taskManager-api:
    container_name: taskManager-api
    build: ./TaskManager.API
    ports:
      - "5000:80"
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ConnectionStrings__DefaultConnection: "Host=taskmanager-db;Database=taskmanager;Username=postgres;Password=postgres"
      IdentityServer__Authority: "http://identityserver:5000"
      EventBus__ConnectionString: "amqp://admin:admin123@rabbitmq:5672"
    depends_on:
      identityserver:
        condition: service_healthy
      taskmanager-db:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 5

  seq:
    image: datalust/seq:2024.3
    container_name: seq
    environment:
      - ACCEPT_EULA=Y
    ports:
      - 8081:80

volumes:
  identity_data:
  taskmanager_data: